using AIUB.FingerPrintSync.Framework.Data;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AIUB.FingerPrintSync.Framework.Facade
{
    public class AttendanceFacade
    {
        public static List<TB_EVENT_LOG> GetUnsyncAttendance()
        {

            var allDeviceIds = DeviceFacade.GetActiveDeviceList().ToList().Select(c=>c.nReaderIdn);
            var log = DataManager.Instance.TB_EVENT_LOG.Where(dt => !dt.IsSync && dt.nUserID > 10 && dt.nEventIdn == 55 && allDeviceIds.Contains(dt.nReaderIdn)).ToList();
            return log;
        }

        public static bool UpdateLogStatus(TB_EVENT_LOG log)
        {
            string error = string.Empty;
            try
            {
                TB_EVENT_LOG dbLog = DataManager.Instance.TB_EVENT_LOG.SingleOrDefault(x => x.nEventLogIdn == log.nEventLogIdn);
                if (dbLog != null)
                    dbLog.IsSync = log.IsSync;

                DataManager.Instance.SaveChanges();
                return true;
            }
            catch (Exception ex)
            {
                error = ex.Message;
                return false;
            }
        }
        public static bool UpdateLogsStatus(List<TB_EVENT_LOG> logs)
        {
            string error = string.Empty;
            try
            {

                TB_EVENT_LOG dbLog = null;
                BioStarEntities context = DataManager.Instance;//taking one inctace
                foreach (var log in logs.Where(x => x.IsSync))
                {
                    dbLog = context.TB_EVENT_LOG.SingleOrDefault(x => x.nEventLogIdn == log.nEventLogIdn);
                    if (dbLog != null)
                        dbLog.IsSync = log.IsSync;
                }
                context.SaveChanges();
                return true;
            }
            catch (Exception ex)
            {
                error = ex.Message;
                return false;
            }
        }
        public static bool DeleteUpdatedLogs()
        {
            string error = string.Empty;
            try
            {
                //taking one inctace
                BioStarEntities context = DataManager.Instance;
                List<TB_EVENT_LOG>  logs = context.TB_EVENT_LOG.Where(dt => dt.IsSync && dt.nUserID > 10 && dt.nEventIdn == 55).ToList();

                foreach (var log in logs.Where(x => x.IsSync))
                {
                     context.TB_EVENT_LOG.Remove(log);
                }
                context.SaveChanges();
                return true;
            }
            catch (Exception ex)
            {
                error = ex.Message;
                return false;
            }
        }

        public static bool ResetLogsStatus()
        {
            string error = string.Empty;
            try
            {
                BioStarEntities context = DataManager.Instance;//taking one inctace

                context.TB_EVENT_LOG.Where(dt => dt.IsSync && dt.nUserID > 10 && dt.nEventIdn == 55)
                        .ToList().ForEach(x => x.IsSync = false);
                context.SaveChanges();
                return true;
            }
            catch (Exception ex)
            {
                error = ex.Message;
                return false;
            }
        }

    }
}
